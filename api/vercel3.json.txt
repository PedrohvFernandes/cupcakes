A vercel vai continuar usando o builds para fazer o deploy, mas o arquivo que vai ser executado Ã© o dist/index.js ou seja o arquivo que foi buildado no pre-commit ou manualmente, enviando a pasta dist para github e a utilizando no momento do deploy.

{
  "version": 2,
  "builds": [
    {
      "src": "dist/index.js",
      "use": "@vercel/node",
      "config": { "includeFiles": ["dist/**"] }
    }
  ],
  "routes": [
    {
      "src": "/(.*)",
      "dest": "dist/index.js"
    }
  ]
}

pacakge.json

  "scripts": {
    "build-local": "tsc && tsc-alias",
    "start": "node dist/server.js",
    "dev": "ts-node-dev -r tsconfig-paths/register src/server.ts",

    "build": "rimraf dist && tsc && tsc-alias",
    "ts.check": "tsc --project tsconfig.json",
    "add-build": "git add dist"
  },

  usando lib pre-commit:

  "pre-commit": [
    "ts.check",
    "build",
    "add-build"
  ],

  ou
  
  "scripts": {
    "build": "rimraf dist && tsc && tsc-alias",
    
    "start-local-build": "nodemon dist/server.js",
    "dev": "ts-node-dev -r tsconfig-paths/register src/server.ts",
    
    "start": "nodemon -r tsconfig-paths/register src/server.ts",
    
    "ts.check": "tsc --project tsconfig.json",
    "add-build": "git add dist"
  },
  "pre-commit": [
    "ts.check",
    "build",
    "add-build"
  ],

  Pode usar a lib husky pra fazer o pre-commit:

    "husky": {
      "hooks": {
        "pre-commit": "npm run ts.check && build && add-build"
      }
   },

